<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:munit-examples.xml"/>
    </spring:beans>
    <munit:test name="sayHello_payloadReturnsHelloByron_True" description="Calling sayHello flow sets payload to &quot;Hello Byron&quot;">
        <flow-ref name="sayHello" doc:name="sayHello"/>
        <munit:assert-payload-equals message="Payload does NOT contain &quot;Hello Byron&quot;" expectedValue="#[&quot;Hello Byron&quot;]" doc:name="Assert Payload - Validate Payload returns &quot;Hello Byron&quot;"/>
    </munit:test>
    <munit:test name="say-hello_payloadTypeIsString_True" description="calling sayHello flow sets payload data type to java string">
        <flow-ref name="sayHello" doc:name="sayHello"/>
        <munit:assert-true message="FAILED Expected Payload datatype to be java String but found #[payload.getClass().getName()]" condition="#[payload is java.lang.String]" doc:name="Assert True validate Payload datatype as Java String"/>
    </munit:test>
    <munit:before-test name="say-hello-test-suiteBefore_Test" description="Before tests actions">
        <munit:set payload="#[]" doc:name="Set Message - Set Query Param &quot;name&quot;">
            <munit:inbound-properties>
                <munit:inbound-property key="http.query.params" value="#[{'name':'Byron'}]"/>
            </munit:inbound-properties>
        </munit:set>
    </munit:before-test>
    <munit:test name="say-hello_fname_returns_FirstName_True" description="calling sayHello sets fname to &quot;Byron&quot;">
        <flow-ref name="sayHello" doc:name="sayHello"/>
        <munit:assert-on-equals message="FAILED Expected fname equals &quot;Byron&quot; but was #[flowVars.fname]" expectedValue="#[&quot;Byron&quot;]" actualValue="#[flowVars.fname]" doc:name="Assert Equals fname equals Byron"/>
    </munit:test>
</mule>
